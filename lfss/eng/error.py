import sqlite3
from typing import Callable

class LFSSExceptionBase(Exception):...

class FileLockedError(LFSSExceptionBase):...

class InvalidOptionsError(LFSSExceptionBase, ValueError):...

class InvalidDataError(LFSSExceptionBase, ValueError):...

class InvalidInputError(InvalidDataError):...

class InvalidPathError(InvalidDataError):...

class DatabaseLockedError(LFSSExceptionBase, sqlite3.DatabaseError):...

class DatabaseTransactionError(LFSSExceptionBase, sqlite3.DatabaseError):...

class PathNotFoundError(LFSSExceptionBase, FileNotFoundError):...

class FileDuplicateError(LFSSExceptionBase, FileExistsError):...

class PermissionDeniedError(LFSSExceptionBase, PermissionError):...

class StorageExceededError(LFSSExceptionBase):...

class TooManyItemsError(LFSSExceptionBase):...

def assert_or(condition: bool, exception: LFSSExceptionBase | Callable[[], LFSSExceptionBase]):
    if not condition:
        if isinstance(exception, Exception):
            raise exception
        elif callable(exception):
            raise exception()
        else:
            raise TypeError("Exception must be an instance of LFSSExceptionBase or a callable returning one")